from aiogram import Router, F, types
from aiogram.filters import Command, or_f
from motor.core import AgnosticDatabase as MDB
from keyboards import  main_kb
from aiogram.fsm.context import FSMContext

router = Router()

@router.message(or_f(Command(commands=["cancel","leave", "stop"]), F.text == "‚ùå –ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å"))
async def cmd_cancel(message: types.Message, db: MDB, state: FSMContext) -> None:
    print("in cancel")
    user = await db.users.find_one({"_id": message.from_user.id})
    if user["status"] == 2:
        await message.reply("*üí¨ –¢—ã –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç!*")
        await message.bot.send_message(
            user["interlocutor"], "*üí¨ –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç!*"
        )

        await db.users.update_many(
            {"_id": {"$in": [user["_id"], user["interlocutor"]]}},
            {"$set": {"status": 0, "interlocutor": ""}}
        )
    elif user["status"] == 1:
        await message.reply("–ü–æ–Ω—è–ª, –æ—Ç–º–µ–Ω–∞")
        await db.users.update_one({"_id": message.from_user.id}, {"$set": {"status": 0}})
    elif user["status"] == 3:
        await state.clear()

        await message.reply("–ü–æ–Ω—è–ª, –æ—Ç–º–µ–Ω–∞")
        await db.users.update_one({"_id": message.from_user.id}, {"$set": {"status": 0}})
    else:
        await message.reply("–°–ª—É—à–∞—é –≤–∞—Å")

    searchers = await db.users.count_documents({"status": 1})
    result = await db.waitings.aggregate([
        {"$match": {"receiver_id": message.from_user.id}},
        {"$group": {"_id": None, "count": {"$sum": 1}}}
    ]).to_list(1)

    count = result[0]["count"] if result else 0
    await message.answer(
        "*‚òï –ü—Ä–∏–≤–µ—Ç, –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∫—Ä—ã—Ç–∫—É \(–Ω–∏–∫—Ç–æ –Ω–µ —É–∑–Ω–∞–µ—Ç –æ—Ç –∫–æ–≥–æ\), –ª–∏–±–æ –Ω–∞—á–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç\!*\n"
        f"_üëÄ –¢—ã –º–æ–∂–µ—à—å –ø–æ–æ–±—â–∞—Ç—å—Å—è –µ—â—ë —Å :_ `{searchers}` –ª—é–¥—å–º–∏\n"
        f"_üì© –¢–∞–∫–∂–µ –≤–∞—Å –æ–∂–∏–¥–∞—é—Ç :_ `{count}` –æ—Ç–∫—Ä—ã—Ç–æ–∫",
        reply_markup=main_kb
    )